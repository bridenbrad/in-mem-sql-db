package com.naxx.db.sql.command.select.operator.physical.common.key.part;

import com.naxx.db.sql.command.select.tuple.Tuple;

/**
 * This class was autogenerated. Do not edit manually.
 */
public final class ${largeTypeName}Part implements Part {
	
	private final ${smallTypeName} value;
	private final boolean isNull;

	public ${largeTypeName}Part(${smallTypeName} value, boolean isNull) {
		this.value = value;
		this.isNull = isNull;
	}
	
	@Override
	public void writeStateTo(int index, Tuple tuple) {
		tuple.put${largeTypeName}(index, value);
	}

	@Override
	public boolean isNull() {
		return isNull;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (isNull ? 1231 : 1237);
		result = prime * result + (int) value;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		${largeTypeName}Part other = (${largeTypeName}Part) obj;
		if(isNull && other.isNull) {
			return true;
		}
		if(isNull || other.isNull) {
			return false;
		}
		if (value != other.value) {
			return false;
		}
		return true;
	}
	
	@Override
	public String toString() {
		return "[value=" + value + ",isNull=" + isNull + "]";
	}
}